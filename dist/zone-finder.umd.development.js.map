{"version":3,"file":"zone-finder.umd.development.js","sources":["../src/neighbours.ts","../src/get-zones-in-grid.ts"],"sourcesContent":["import { Coords } from 'core';\n\nexport function getOthogonalNeighbours([y, x]: Coords): ReadonlyArray<Coords> {\n  return [[y - 1, x], [y + 1, x], [y, x - 1], [y, x + 1]];\n}\n\nexport function getDiagonalNeighbours([y, x]: Coords): ReadonlyArray<Coords> {\n  return [[y - 1, x - 1], [y + 1, x + 1], [y + 1, x - 1], [y - 1, x + 1]];\n}\n\nexport function getAllNeighbours([y, x]: Coords): ReadonlyArray<Coords> {\n  return getOthogonalNeighbours([y, x]).concat(getDiagonalNeighbours([y, x]));\n}","import { Coords, Grid, Zone } from 'core';\nimport { getOthogonalNeighbours } from './neighbours';\n\nexport function getZonesInGrid<T>(\n  grid: Grid<T>,\n  getNeighbours: (\n    coords: Coords\n  ) => ReadonlyArray<Coords> = getOthogonalNeighbours\n): ReadonlyArray<Zone<T>> {\n  //\n  const gridHeight = grid.length;\n  const gridWidth = grid[0].length;\n\n  const getCellType = ([y, x]: Coords) => grid[y][x];\n\n  const isInGrid = ([y, x]: Coords) => {\n    return y >= 0 && x >= 0 && y < gridHeight && x < gridWidth;\n  };\n\n  const zones: Zone<T>[] = [];\n  const addZone = (type: T) => {\n    const zone = { type, cells: [] };\n    zones.push(zone);\n    return zone;\n  };\n\n  const visited: Coords[] = [];\n  const wasVisited = ([y, x]: Coords) => {\n    return visited.some(([vy, vx]) => vy === y && vx === x);\n  };\n\n  const visitCoords = (coords: Coords, zone: Zone<T> | null) => {\n    //\n    visited.push(coords);\n    const type = getCellType(coords);\n\n    zone = zone || addZone(type);\n    zone.cells.push(coords);\n\n    const isMatchingNeighbour = (coords: Coords) =>\n      getCellType(coords) === type;\n\n    const matchingNeighbours = getNeighbours(coords)\n      .filter(isInGrid)\n      .filter(isMatchingNeighbour);\n\n    matchingNeighbours.forEach(nCoords => {\n      if (!wasVisited(nCoords)) {\n        visitCoords(nCoords, zone);\n      }\n    });\n  };\n\n  getAllCoordinates(grid).forEach(coords => {\n    if (!wasVisited(coords)) {\n      visitCoords(coords, null);\n    }\n  });\n\n  return zones;\n}\n\nfunction getAllCoordinates<T>(grid: Grid<T>): ReadonlyArray<Coords> {\n  return grid.reduce( (acc, row, y ) => {\n    return [...acc, ...(row.map((_, x) => {\n      return [y, x] as Coords;\n    })) ]\n  }, [] as Coords[])\n}"],"names":["getOthogonalNeighbours","y","x","getZonesInGrid","grid","getNeighbours","gridHeight","length","gridWidth","getCellType","isInGrid","zones","addZone","type","zone","cells","push","visited","wasVisited","some","vy","vx","visitCoords","coords","isMatchingNeighbour","matchingNeighbours","filter","forEach","nCoords","getAllCoordinates","reduce","acc","row","map","_"],"mappings":"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"}